generator client {
  provider = "prisma-client-js"
  output   = "../../node_modules/@prisma/client"
}

datasource db {
  provider = "sqlite"
  url      = "file:./main.db"
}

model User {
  id  String     @id @default(uuid())
  name String  @unique
  password  String
  timestamp DateTime @default(now())
}

model Transaction {
  id    String     @id @default(uuid())
  type String
  assetId  String
  timestamp DateTime @default(now())
  quantity Int
  price Decimal
  userId  String
  marks String?
  notes String?
  portfolio String?
  fee Decimal?
  source String
}

model Asset {
  id  String     @id @default(uuid())
  name   String
  symbol   String
  marketId   String
  userId  String
  timestamp DateTime
  price Decimal
  marks String?
  notes String?
}

model library {
  id  String     @id @default(uuid())
  name String
  symbol  String
  geckoId String
}

model Marks {
  id  String     @id @default(uuid())
  name String
  userId  String
}

model Portfolio {
  id  String     @id @default(uuid())
  name String
  userId  String
}

model Notes {
  id  String     @id @default(uuid())
  name String
  userId  String
  createdAt DateTime
  updatedAt DateTime
  isArchived Boolean @default(false)
  linkedTo String
  path String
  marks String
}

model Swaps {
  id  String     @id @default(uuid())
  userId  String
  assetIdChange String
  assetIdReceive String
  fee Decimal?
  notes String?
  marks String?
  changeAmount Decimal
  receiveAmount Decimal
  priceChange Decimal
  priceReceive Decimal
  timestamp DateTime
  sellTransactionId String
  buyTransactionId String
}

model Drops {
  id  String     @id @default(uuid())
  userId  String
  assetId String
  fee Decimal?
  timestamp DateTime
  notes String?
  marks String?
}

model Staking {
  id  String     @id @default(uuid())
  userId  String
  assetId String
  value Decimal
  reward Decimal
  rewardSold Decimal
  coinToReceive String
  timestamp DateTime
  notes String?
  marks String?
}